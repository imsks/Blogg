{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducers.js","store/reducers/projectReducers.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","calendar","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","console","log","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","CreateProject","createProject","history","push","cols","rows","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducers","action","message","projectReducers","rootReducer","combineReducers","authReducer","projectReducer","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","presence","sessions","AuthIsLoaded","children","useSelector","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.670caee8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../store/actions/authActions\";\r\n\r\nconst SignedInLinks = (props) => {\r\n  // console.log(props);\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Project</NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.signOut}>Log Out</a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => dispatch(signOut()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);\r\n","export const signIn = (credentials) => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"LOGIN_SUCCESS\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"LOGIN_ERROR\",\r\n          err,\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return (dispatch, getState, { getFirebase }) => {\r\n    const firebase = getFirebase();\r\n\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"SIGNOUT_SUCCESS\",\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const signUp = (newUser) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firebase = getFirebase();\r\n    const firestore = getFirestore();\r\n\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\r\n      .then((res) => {\r\n        return firestore\r\n          .collection(\"users\")\r\n          .doc(res.user.uid)\r\n          .set({\r\n            firstName: newUser.firstName,\r\n            lastName: newUser.lastName,\r\n            initials: newUser.firstName[0] + newUser.lastName[0],\r\n          });\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"SIGNUP_SUCCESS\",\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"SIGNUP_ERROR\",\r\n          err,\r\n        });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst SignedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/signin\">Signin</NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default SignedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SignedInLinks from \"./SignedInLinks\";\r\nimport SignedOutLinks from \"./SignedOutLinks\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n  const { auth, profile } = props;\r\n  // console.log(props);\r\n  const links = auth.uid ? (\r\n    <SignedInLinks profile={profile} />\r\n  ) : (\r\n    <SignedOutLinks />\r\n  );\r\n  return (\r\n    <nav className=\"nav-wrapper grey darken-3\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"brand-logo\">\r\n          Blogg\r\n        </Link>\r\n        {auth.isLoaded ? (\r\n          links\r\n        ) : (\r\n          <p className=\"nav-wrapper grey darken-3\">Loading Screen</p>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst Notifications = ({ notifications }) => {\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"card z-depth-1\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications &&\r\n              notifications.map((item) => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    <span className=\"pink-text\">{item.user} </span>\r\n                    <span>{item.content}</span>\r\n                    <div className=\"grey-text note-date\">\r\n                      {moment(item.time.toDate()).fromNow()}\r\n                    </div>\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content-grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>\r\n          {project.authorFirstName} {project.authorLastName}\r\n        </p>\r\n        <p className=\"grey-text\">\r\n          {moment(project.createdAt.toDate()).fromNow()}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"../projects/ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={\"/project/\" + project.id} key={project.id}>\r\n              <ProjectSummary project={project} />;\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from \"./Notifications\";\r\nimport ProjectList from \"../projects/ProjectList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    // console.log(this.props);\r\n    const { projects, auth, notifications } = this.props;\r\n    // console.log(auth);\r\n\r\n    if (!auth.uid) return <Redirect to=\"signin\" />;\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m6\">\r\n            <ProjectList projects={projects} />\r\n          </div>\r\n          <div className=\"col s12 m5 offset-1\">\r\n            <Notifications notifications={notifications} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    projects: state.firestore.ordered.projects,\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\r\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nconst ProjectDetails = (props) => {\r\n  // console.log(props);\r\n  // const id = props.match.params.id;\r\n  const { project, auth } = props;\r\n  // console.log(auth);\r\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n\r\n  if (project) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{project.title}</span>\r\n            <p>{project.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-4 grey-text\">\r\n            <div>\r\n              Posted by {project.authorFirstName} {project.authorLastName}\r\n            </div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container\">\r\n        <p>Loading project...</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {\r\n      collection: \"projects\",\r\n    },\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { signIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signIn(this.state);\r\n    console.log(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    console.log(auth);\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    // console.log(authError);\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (creds) => dispatch(signIn(creds)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { signUp } from \"../../store/actions/authActions\";\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n\r\n  render() {\r\n    const { auth, authError } = this.props;\r\n    // console.log(auth);\r\n    if (auth.uid) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Signup</button>\r\n          </div>\r\n          <div className=\"red-text center\">\r\n            {authError ? <p>{authError}</p> : null}\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (user) => dispatch(signUp(user)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { createProject } from \"../../store/actions/projectActions\";\r\n\r\nclass CreateProject extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    //console.log(this.props);\r\n    this.props.createProject(this.state);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { auth } = this.props;\r\n    // console.log(auth);\r\n\r\n    if (!auth.uid) return <Redirect to=\"signin\" />;\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h5 className=\"grey-text text-darken-3\">Create A project</h5>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"content\">Project Content</label>\r\n            <textarea\r\n              id=\"content\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              className=\"materialize-textarea\"\r\n              onChange={this.handleChange}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // console.log(state);\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\n// This function dispatches createProject function\r\n//to this component as props.\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProject: (project) => dispatch(createProject(project)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    // Make async call to database\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n\r\n    firestore\r\n      .collection(\"projects\")\r\n      .add({\r\n        ...project,\r\n        authorFirstName: profile.firstName,\r\n        authorLastName: profile.lastName,\r\n        authorId: authorId,\r\n        createdAt: new Date(),\r\n      })\r\n      .then(() => {\r\n        dispatch({\r\n          type: \"CREATE_PROJECT\",\r\n          project,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: \"CREATE_PROJECT__ERR\",\r\n          err,\r\n        });\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducers = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"Login Failed\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login Failed\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"Login Success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNOUT_SUCCESS\":\r\n      console.log(\"Signout Success\");\r\n      return {\r\n        state,\r\n      };\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"SIGNUP ERROR\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducers;\r\n","const initState = {\r\n  projects: [\r\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" },\r\n  ],\r\n};\r\n\r\nconst projectReducers = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROJECT\":\r\n      console.log(\"Created project\", action.project);\r\n      return state;\r\n    case \"CREATE_PROJECT__ERR\":\r\n      console.log(\"Created project Error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default projectReducers;\r\n","import authReducer from \"./authReducers\";\r\nimport projectReducer from \"./projectReducers\";\r\nimport { combineReducers } from \"redux\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  project: projectReducer,\r\n  firestore: firestoreReducer,\r\n  firebase: firebaseReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyAYR1VFmh47Z1cyU4ziZe-EOETDs8hLsxg\",\r\n  authDomain: \"blogg-6f87a.firebaseapp.com\",\r\n  databaseURL: \"https://blogg-6f87a.firebaseio.com\",\r\n  projectId: \"blogg-6f87a\",\r\n  storageBucket: \"blogg-6f87a.appspot.com\",\r\n  messagingSenderId: \"335173087880\",\r\n  appId: \"1:335173087880:web:1c595abca91ec1124b253d\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({\r\n  timestampsInSnapshots: true,\r\n});\r\n\r\nexport default firebase;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider, useSelector } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  createFirestoreInstance,\n} from \"redux-firestore\";\nimport {\n  ReactReduxFirebaseProvider,\n  getFirebase,\n  isLoaded,\n} from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\nimport firebase from \"firebase/app\";\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, fbConfig)\n  )\n);\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n  presence: \"presence\",\n  sessions: \"sessions\",\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth)) return <div className=\"center\">Loading Screen...</div>;\n  return children;\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}